{"version":3,"sources":["components/wordstream/control-panel/calcLayers.js","components/wordstream/control-panel/calcWords.js","components/wordstream/control-panel/ControlPanel.jsx","components/wordstream/ForceGraph/ForceGraph.jsx","components/wordstream/ForceModal/ForceModal.jsx","components/wordstream/graph/Graph.jsx","components/wordstream/stack-bar/StackBar.jsx","components/wordstream/WordStream.jsx","App.js","serviceWorker.js","index.js"],"names":["calcLayers","props","data","screenDimensions","dates","forEach","row","push","date","fields","Object","keys","words","boxWidth","length","streamSizeScale","totalFrequenciesPerPeriod","calculateTotalFrequenciesPerPeriod","frequencyVals","d3","key","d","rollup","leaves","perPeriodSum","field","entries","map","totalValue","value","maxPeriodFreq","domain","range","nice","generateStreamSizeScale","stackedLayers","totalFrequencies","unshift","offset","generateStackedLayers","boxes","i","stackLayer","x","y","width","height","generateBoxes","arr","item","obj","parseInt","sudden","calcWords","maxFontSize","minFontSize","fontSizeScale","max","min","Math","pow","box","j","word","generateFontSizeScale","cw","ch","font","cloudRadians","PI","spiral","size","e","t","cos","sin","c","canvas","context","getContext","fillStyle","strokeStyle","textAlign","textBaseline","document","createElement","clearRect","maxh","n","di","save","fontSize","rotate","random","w","measureText","text","h","translate","fillText","padding","lineWidth","strokeText","restore","x1","y1","x0","y0","timeStep","streamHeight","frequency","bc","pixels","getImageData","sprite","Array","tc","board","buildBoard","innerBox","boxHeight","boxX","boxY","place","buildCanvas","svg","attr","graphGroup","append","catIndex","indexOf","area1","curve","area2","datum","buildSvg","path1","select","p2d1","Path2D","path2","p2d2","ctx","fill","dxdy","dx","dy","maxDelta","sqrt","startX","startY","s","dt","placed","abs","cloudCollide","placeWordToBoard","wh","ww","bw","wsi","wordPixel","bsi","ControlPanel","animatedComponents","makeAnimated","fileList","label","olympicCountryOptions","youtubeOptions","olympicSportOptions","state","selectedOption","currentData","noOfTopTerms","fontRange","topicOptions","selectedTopicOptions","selectedTopics","handleSelectChange","bind","handleFormChange","handleControlPanelSubmit","trimTerms","event","target","type","checked","name","this","setState","topic","splice","includes","preventDefault","setLoading","setTimeout","activeGraph","$","youtubeData","olympicData","olympicSportData","keepSelectedTopics","layersData","wordsData","allWords","concat","setActiveGraph","setLayersData","setWordsData","Range","Slider","className","theme","borderRadius","colors","primary25","primary","onChange","options","htmlFor","trackStyle","backgroundColor","handleStyle","borderColor","allowCross","defaultValue","isDisabled","components","isMulti","onClick","disabled","React","Component","ForceDirectedGraph","legendSvg","longColors","colorScheme","currentForceData","forceData","activeFields","groupNodeMap","olympicGroupIdToCategoryMap","processForceData","olympicSportForceData","selectedYear","olympicSportNodeGroupMap","youtubeGroupIdToCategoryMap","youtubeForceData","youtubeNodeGroupMap","olympicCountryGroupIdToCategoryMap","olympicCountryForceData","olympicCountryNodeGroupMap","drawForceGraph","selectAll","remove","drawLegends","inverseMap","self","legendNodes","enter","temp","index","shuffled","slice","floor","nameMap","keepGroups","sampleData","links","sourceGrp","source","targetGrp","nodeGroupMap","linkScale","keepRelevantGroups","randomLinkSubset","getRandomSubarray","uniqueNodes","nodes","link","node","id","group","graph","radius","console","log","color","simulation","force","call","on","active","alphaTarget","restart","fx","fy","ForceModal","isOpen","title","setModalOpen","contentLabel","closeTimeoutMS","ariaHideApp","onRequestClose","Graph","layersSvg","wordstreamSvg","axisSvg","gridLinesSvg","drawWordStream","drawLayers","drawBoxes","addInteractions","streamHeightScale","area","modalOpen","bool","prevProps","topics","drawAxis","streamRange","xAxisScale","gridScale","xAxis","getBBox","style","ticks","tickSize","tickFormat","year","texts","exit","transition","duration","prevColor","wordStreamG","thisText","filter","cloned","setShowSideGraph","allTexts","stackData","_groups","__data__","setStackBarData","streamLayer","points","elm","thePoint","clonedNode","cloneNode","clonedParentNode","parentNode","appendChild","querySelectorAll","removeChild","pathSelection","preserveAspectRatio","viewBox","transform","StackBar","nameOfPerson","stackBarData","columns","keepKeys","draw","margin","g","rangeRound","paddingInner","align","z","total","maxTotal","sort","a","b","xRange","xRangeScale","bandwidth","tooltip","xPosition","yPosition","legend","reverse","WordStream","showSideGraph","isLoading","Promise","resolve","App","Boolean","window","location","hostname","match","jQuery","require","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e35cadd2.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nexport default function calcLayers(props) {\n    let {data, screenDimensions} = props;\n    let dates = [];\n        data.forEach((row) => {\n            dates.push(row.date);\n        });\n    let fields = Object.keys(data[0].words),\n        boxWidth = screenDimensions[0]/data.length,\n        streamSizeScale = generateStreamSizeScale(),\n        stackedLayers = generateStackedLayers(),\n        boxes = generateBoxes();\n\n    function generateStreamSizeScale() {\n        let totalFrequenciesPerPeriod = calculateTotalFrequenciesPerPeriod();\n        let frequencyVals = d3.nest().key(function(d) {\n            return d.date;\n            })\n            .rollup(function(leaves) {\n            return d3.sum(leaves, (d) => {\n                let perPeriodSum = 0;\n                fields.forEach(field=>perPeriodSum+=d[field]);\n                return perPeriodSum;\n            });\n            }).entries(totalFrequenciesPerPeriod)\n            .map(function(d) {\n            return {\n                date: d.key,\n                totalValue: d.value\n            };\n            });\n        let maxPeriodFreq = d3.max(frequencyVals, d=>d.totalValue);\n        return d3.scaleLinear().domain([-maxPeriodFreq, maxPeriodFreq]).range([0, screenDimensions[1]]).nice();\n    }\n\n    function calculateTotalFrequenciesPerPeriod(){\n        let arr = [];\n        data.forEach(item=>{\n            let obj = {};\n            obj['date']=item.date;\n            fields.forEach(field=>{\n                obj[field] = d3.sum(item.words[field],d=>parseInt(d.sudden));\n            });\n            arr.push(obj);\n        });\n        return arr;\n    }\n\n    function generateStackedLayers() {\n        let totalFrequencies = calculateTotalFrequenciesPerPeriod();\n        totalFrequencies.unshift(totalFrequencies[0]);\n        let stackedLayers = d3.stack().offset(d3.stackOffsetSilhouette).keys(fields)(totalFrequencies);\n        return stackedLayers;\n    }\n\n    function generateBoxes() {\n        let boxes = {};\n        fields.forEach((field, i)=>{\n            boxes[field] = [];\n            stackedLayers[i].forEach(stackLayer=>{\n                boxes[field].push({\n                    x: stackLayer.data.date,\n                    y: streamSizeScale(stackLayer[0]),\n                    width: boxWidth,\n                    height: streamSizeScale(stackLayer[1]) - streamSizeScale(stackLayer[0])\n                });\n            });\n        });\n        return boxes;\n    }\n\n    return {\n        streamSizeScale: streamSizeScale,\n        stackedLayers: stackedLayers,\n        boxes: boxes,\n        boxWidth: boxWidth,\n        fields: fields,\n        dates: dates\n    };\n}   \n","import * as d3 from 'd3';\n\nexport default function calcWords(props) {\n    let {data, maxFontSize, minFontSize, streamSizeScale, screenDimensions, stackedLayers, boxes, boxWidth, fields} = props;\n    let fontSizeScale = generateFontSizeScale(),\n        cw = 1 << 14,\n        ch = 1 << 11,\n        font = \"Arial\",\n        cloudRadians = Math.PI / 180,\n        spiral = achemedeanSpiral;\n    getImageData();\n    \n    for(var tc = 0; tc< fields.length; tc++){\n        var field = fields[tc];\n        var board = buildBoard(boxes, field);\n        var innerBoxes = boxes[field];\n        //Place\n        for(var bc = 0; bc < data.length; bc++){\n            var words = data[bc].words[field];\n            var n = words.length;\n            var innerBox = boxes[field][bc];\n            board.boxWidth = innerBox.width;\n            board.boxHeight = innerBox.height;\n            board.boxX = innerBox.x;\n            board.boxY = innerBox.y;\n            for(var i = 0; i < n; i++){\n                place(words[i], board, bc);\n            }\n        }\n    }\n\n    function generateFontSizeScale() {\n        let max = 0, min = Math.pow(10, 1000);\n        data.forEach(box=>{\n            fields.forEach(field=>{\n                let i = 0, j = Math.pow(10, 1000);\n                box.words[field].forEach(word=>{\n                    if(word.sudden>i) i = word.sudden;\n                    if(word.sudden<j) j = word.sudden;\n                });\n                if(i>max) max = i;\n                if(j<min) min = j;\n            });\n        });\n        return d3.scaleLinear().domain([min, max]).range([minFontSize, maxFontSize]).nice();\n    }\n\n    function getImageData(){\n        var av = 0;\n        var flow = 0;\n        // var data = boxes.data;\n        var c = getContext(document.createElement(\"canvas\"));\n        c.clearRect(0, 0, cw, ch);\n        var x = 0,\n            y = 0,\n            maxh = 0;\n        for(var i = 0; i < data.length; i++){\n            fields.forEach(field =>{\n                var words = data[i].words[field];\n                var n = words.length;\n                var di=-1;\n                var d = {};\n                while (++di < n) {\n                    d = words[di];\n                    c.save();\n                    d.fontSize = fontSizeScale(d.sudden);\n                    d.rotate = (~~(Math.random() * 4) - 2) * av - flow;\n                    c.font = ~~(d.fontSize + 1) + \"px \" + font;\n                    var w = ~~(c.measureText(d.text).width),\n                        h = d.fontSize;\n                    if (h > maxh) maxh = h;\n                    if (x + w >= cw) {\n                        x = 0;\n                        y += maxh;\n                        maxh = 0;\n                    }\n                    if (y + h >= ch) break;\n                    c.translate((x + (w >> 1)) , (y + (h >> 1)));\n                    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n                    c.fillText(d.text, 0, 0);\n                    if (d.padding) {\n                        c.lineWidth = (2 * d.padding, c.strokeText(d.text, 0, 0))\n                    };\n                    c.restore();\n\n                    d.width = w;\n                    d.height = h;\n                    d.x = x;\n                    d.y = y;\n                    d.x1 = w>>1;\n                    d.y1 = h>>1;\n                    d.x0 = -d.x1;\n                    d.y0 = -d.y1;\n                    d.timeStep = i;\n                    d.streamHeight = streamSizeScale(d.frequency);\n                    x += w;\n                }\n            });\n        }\n    \n        for(var bc = 0; bc < data.length; bc++){\n            fields.forEach(field=>{\n                var words = data[bc].words[field];\n                var n = words.length;\n                var di=-1;\n                var d = {};\n                while (++di < n) {\n                    d = words[di];\n                    var pixels = c.getImageData(d.x, d.y, d.width, d.height).data;\n                    d.sprite = Array();\n                    for(var i = 0; i<<2 < pixels.length; i++){\n                        d.sprite.push(pixels[i<<2]);\n                    }\n                }\n            });\n        }\n    }\n\n    function getContext(canvas) {\n        canvas.width = cw;\n        canvas.height = ch;\n        var context = canvas.getContext(\"2d\");\n        context.fillStyle = context.strokeStyle = \"red\";\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        return context;\n    }\n\n    function buildSvg(boxes, field){\n        let streamPath1 = Array(),\n            streamPath2 = Array();\n        var width = screenDimensions[0],\n            height = screenDimensions[1];\n        var svg = d3.select(document.createElement('svg'));\n        svg\n        .attr('width', width)\n        .attr('height', height);\n        var graphGroup = svg.append('g');\n\n        var catIndex = fields.indexOf(field);\n\n        var area1 = d3.area()\n            .curve(d3.curveLinear)\n            .x(function(d, i){return (i)*boxWidth})\n            .y0(0)\n            .y1(function(d){return streamSizeScale(d[0]); });\n\n        var area2 = d3.area()\n            .curve(d3.curveLinear)\n            .x(function(d, i){return (i)*boxWidth })\n            .y0(function(d){return (streamSizeScale(d[1])); })\n            .y1(height);\n        graphGroup.append('path').datum(stackedLayers[catIndex])\n            .attr('d', area1)\n            .attr('stroke', 'red')\n            .attr('stroke-width', 2)\n            .attr('fill', 'red')\n            .attr('id', 'path1');\n        graphGroup.append('path').datum(stackedLayers[catIndex])\n            .attr('d', area2)\n            .attr('stroke', 'red')\n            .attr('stroke-width', 2)\n            .attr('fill', 'red')\n            .attr('id', 'path2');\n        return svg;\n    }\n\n    function buildCanvas(boxes, field){\n        var svg = buildSvg(boxes, field);\n        var path1 = svg.select(\"#path1\").attr('d');\n        var p2d1 = new Path2D(path1);\n        var path2 = svg.select(\"#path2\").attr('d');\n        var p2d2 = new Path2D(path2);\n        var canvas = document.createElement(\"canvas\");\n        // document.querySelector('body').appendChild(canvas);\n        canvas.width = screenDimensions[0];\n        canvas.height = screenDimensions[1];\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = 'red';\n        ctx.fill(p2d1);\n        ctx.fill(p2d2);\n        return canvas;\n    }\n\n    function buildBoard(boxes, field){\n        var canvas = buildCanvas(boxes,field);\n        var width = canvas.width,\n            height = canvas.height;\n        var board = {};\n        board.x = 0;\n        board.y = 0;\n        board.width = width;\n        board.height = height;\n        var sprite = [];\n        //initialization\n        for(var i=0; i< width*height; i++) sprite[i] = 0;\n        var c = canvas.getContext('2d');\n        var pixels = c.getImageData(0, 0, width, height).data;\n        let res = 0;\n        for(var i=0; i< width*height; i++){\n            res++;\n            sprite[i] = pixels[i<<2];\n        }\n        board.sprite = sprite;\n        return board;\n    }\n    \n    function place(word, board, bc){\n        var bw = board.width,\n            bh = board.height,\n            maxDelta = ~~Math.sqrt((board.boxWidth*board.boxWidth) + (board.boxHeight*board.boxHeight)),\n            startX = (bc+1)*board.boxWidth,\n            // startX =  ~~(board.boxX + (board.boxWidth*( Math.random() + .5) >> 1)),\n            startY =  ~~(board.boxY + (board.boxHeight*( Math.random() + .5) >> 1)),\n            s = spiral([board.boxWidth, board.boxHeight]),\n            dt = Math.random() < .5 ? 1 : -1,\n            t = -dt,\n            dxdy, dx, dy;\n        word.x = startX;\n        word.y = startY;\n        word.placed = false;\n        while (dxdy = s(t += dt)) {\n\n            dx = ~~dxdy[0];\n            dy = ~~dxdy[1];\n\n            if (Math.max(Math.abs(dx), Math.abs(dy)) >= (maxDelta))\n                break;\n\n            word.x = startX + dx;\n            word.y = startY + dy;\n\n            if (word.x + word.x0 < 0 || word.y + word.y0 < 0 || word.x + word.x1 > screenDimensions[0] || word.y + word.y1 > screenDimensions[1])\n                continue;\n            if(!cloudCollide(word, board)){\n                placeWordToBoard(word, board);\n                word.placed = true;\n                break;\n            }\n        }\n    }\n\n    function cloudCollide(word, board) {\n        var wh = word.height,\n            ww = word.width,\n            bw = board.width;\n        //For each pixel in word\n        for(var j = 0; j < wh; j++){\n            for(var i = 0; i < ww; i++){\n                var wsi = j*ww + i; //word sprite index;\n                var wordPixel = word.sprite[wsi];\n\n                var bsi = (j+word.y+word.y0)*bw + i+(word.x + word.x0);//board sprite index\n                var boardPixel = board.sprite[bsi];\n\n                if(boardPixel!=0 && wordPixel!=0){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function placeWordToBoard(word, board){\n        //Add the sprite\n        var y0 = word.y + word.y0,\n            x0 = word.x + word.x0,\n            bw = board.width,\n            ww = word.width,\n            wh = word.height;\n        for(var j=0; j< wh; j++){\n            for(var i = 0; i< ww; i++){\n                var wsi = j*ww + i;\n                var bsi = (j+y0)*bw + i + x0;\n                if(word.sprite[wsi]!=0) board.sprite[bsi] = word.sprite[wsi];\n            }\n        }\n    }\n\n    function achemedeanSpiral(size){\n        var e = size[0]/size[1];\n        return function(t){\n            return [e*(t *= .1)*Math.cos(t), t*Math.sin(t)];\n        }\n    };\n    return data;\n}","import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport youtubeData from '../data/main/youtube_py.json';\nimport olympicData from '../data/main/data_by_NOC.json';\nimport olympicSportData from '../data/main/data_by_Sport.json';\nimport calcLayers from './calcLayers';\nimport calcWords from './calcWords';\nimport * as $ from 'jquery';\nimport './ControlPanel.css';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nexport default class ControlPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.animatedComponents = makeAnimated();\n        this.fileList = [\n            {value: \"youtube\", label: \"YouTube Trending\"},\n            {value: \"olympic\", label: \"Olympics by Countries\"},\n            {value: \"olympic_sport\", label: \"Olympics by Sports\"}\n        ]\n        this.olympicCountryOptions = [\n            {value: \"Italy\", label: \"Italy\"},\n            {value: \"United States\", label: \"United States\"},\n            {value: \"Denmark\", label: \"Denmark\"},\n            {value: \"France\", label: \"France\"},\n            {value: \"Great Britain\", label: \"Great Britain\"},\n            {value: \"Hungary\", label: \"Hungary\"},\n            {value: \"Netherlands\", label: \"Netherlands\"},\n            {value: \"Switzerland\", label: \"Switzerland\"},\n            {value: \"Argentina\", label: \"Argentina\"},\n            {value: \"Austria\", label: \"Austria\"}\n        ]\n        this.youtubeOptions = [\n            {value: \"Gaming\", label: \"Gaming\"},\n            {value: \"Howto & Style\", label: \"Howto & Style\"},\n            {value: \"News & Politics\", label: \"News & Politics\"},\n            {value: \"Pets & Animals\", label: \"Pets & Animals\"},\n            {value: \"Music\", label: \"Music\"},\n            {value: \"People & Blogs\", label: \"People & Blogs\"},\n            {value: \"Science & Technology\", label: \"Science & Technology\"},\n            {value: \"Sports\", label: \"Sports\"}\n        ]\n        this.olympicSportOptions = [\n            {value: \"Equestrianism\", label: \"Equestrianism\"},\n            {value: \"Diving\", label: \"Diving\"},\n            {value: \"Boxing\", label: \"Boxing\"},\n            {value: \"Football\", label: \"Football\"},\n            {value: \"Water Polo\", label: \"Water Polo\"},\n            {value: \"Athletics\", label: \"Athletics\"},\n            {value: \"Sailing\", label: \"Sailing\"},\n            {value: \"Wrestling\", label: \"Wrestling\"},\n            {value: \"Rowing\", label: \"Rowing\"},\n            {value: \"Swimming\", label: \"Swimming\"},\n            {value: \"Cycling\", label: \"Cycling\"},\n            {value: \"Shooting\", label: \"Shooting\"},\n            {value: \"Weightlifting\", label: \"Weightlifting\"}\n        ]\n        this.state = {\n            selectedOption: null,\n            currentData: null,\n            noOfTopTerms: 50,\n            minFontSize: 10,\n            maxFontSize: 24,\n            fontRange: [10, 24],\n            topicOptions: null,\n            selectedTopicOptions: null,\n            selectedTopics: []\n        }\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.handleFormChange = this.handleFormChange.bind(this);\n        this.handleControlPanelSubmit = this.handleControlPanelSubmit.bind(this);\n        this.trimTerms = this.trimTerms.bind(this);\n    }\n\n    handleFormChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSelectChange(selectedOption) {\n        this.setState({\n            selectedOption: selectedOption\n        });\n        let selectedTopicOptions;\n        let topicOptions;\n        switch(selectedOption.value) {\n            case 'youtube':\n                topicOptions = this.youtubeOptions;\n                selectedTopicOptions = [\n                    {value: \"Gaming\", label: \"Gaming\"},\n                    {value: \"News & Politics\", label: \"News & Politics\"},\n                    {value: \"Music\", label: \"Music\"},\n                    {value: \"Science & Technology\", label: \"Science & Technology\"}\n                ];\n                break;\n            case 'olympic':\n                topicOptions = this.olympicCountryOptions;\n                selectedTopicOptions = [\n                    {value: \"United States\", label: \"United States\"},\n                    {value: \"Great Britain\", label: \"Great Britain\"},\n                    {value: \"France\", label: \"France\"},\n                    {value: \"Netherlands\", label: \"Netherlands\"}\n                ];\n                break;\n            case 'olympic_sport':\n                topicOptions = this.olympicSportOptions;\n                selectedTopicOptions = [\n                    {value: \"Swimming\", label: \"Swimming\"},\n                    {value: \"Diving\", label: \"Diving\"},\n                    {value: \"Boxing\", label: \"Boxing\"},\n                    {value: \"Football\", label: \"Football\"},\n                ]\n        }\n        this.setState({\n            topicOptions: topicOptions,\n            selectedTopicOptions: selectedTopicOptions,\n            selectedTopics : selectedTopicOptions.map(item=>item.value)\n        });\n    }\n\n    trimTerms(currentData) {\n        currentData.forEach(item=>{\n            Object.keys(item.words).forEach(topic=>{\n                item.words[topic].splice(this.state.noOfTopTerms);\n            });\n        });\n    }\n\n    keepSelectedTopics(currentData) {\n        currentData.forEach(item=>{\n            Object.keys(item.words).forEach(topic=>{\n                if(!this.state.selectedTopics.includes(topic)) {\n                    delete item.words[topic];\n                }\n            });\n        });\n    }\n\n    async handleControlPanelSubmit(e) {\n        e.preventDefault();\n        await this.props.setLoading(true);\n        setTimeout(() => {\n            let currentData = null;\n            let activeGraph = null;\n            switch(this.state.selectedOption.value) {\n                case 'youtube':\n                    currentData = $.extend(true, [], youtubeData);\n                    activeGraph = 'youtube';\n                    break;\n                case 'olympic':\n                    currentData = $.extend(true, [], olympicData);\n                    activeGraph = 'olympic';\n                    break;\n                case 'olympic_sport':\n                    currentData = $.extend(true, [], olympicSportData);\n                    activeGraph = 'olympic_sport';\n                    break;\n            }\n            this.keepSelectedTopics(currentData);\n            this.trimTerms(currentData);\n            let layersData = calcLayers({\n                data: currentData,\n                screenDimensions: this.props.screenDimensions\n            });\n            let wordsData = calcWords({\n                data: currentData,\n                screenDimensions: this.props.screenDimensions,\n                minFontSize: parseInt(this.state.fontRange[0]),\n                maxFontSize: parseInt(this.state.fontRange[1]),\n                ...layersData\n            });\n            let allWords = [];\n            wordsData.map((row)=>{\n                layersData.fields.forEach(topic => {\n                    allWords = allWords.concat(row.words[topic]);\n                });\n            });\n            this.props.setActiveGraph(activeGraph);\n            this.props.setLayersData(layersData);\n            this.props.setWordsData(allWords);\n        }, 1);\n    }\n\n    render() {\n        const Range = Slider.Range;\n        const { selectedOption, minFontSize, maxFontSize, noOfTopTerms, fontRange } = this.state;\n        return (\n                <form>\n                    <div className=\"form-row\">\n                        <div className=\"col-12 col-sm-12 col-md-3 col-lg-3 p-2\">\n                            <label className=\"control-label\"> Choose dataset </label>\n                            <Select\n                                theme={theme => ({\n                                    ...theme,\n                                    borderRadius: 0,\n                                    colors: {\n                                        ...theme.colors,\n                                        primary25: 'hotpink',\n                                        primary: 'black',\n                                    },\n                                })}\n                                value={selectedOption}\n                                onChange={this.handleSelectChange}\n                                options={this.fileList}\n                            />\n                        </div>\n                        <div className=\"col-12 col-sm-12 col-md-2 col-lg-2 p-2\"> \n                            <label className=\"control-label\" htmlFor=\"topTerms\"> Top terms: <span className=\"range-slider__value\">{`${noOfTopTerms} terms`}</span></label>\n                            <Slider\n                                value={noOfTopTerms}\n                                onChange={(value)=>this.setState({noOfTopTerms: value})}\n                                trackStyle={{backgroundColor: '#2c3e50', height: 10 }}\n                                handleStyle={{\n                                    height: 23,\n                                    width: 23,\n                                    borderColor: '#1abc9c'\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-12 col-sm-12 col-md-2 col-lg-2 p-2\"> \n                            <label className=\"control-label\" htmlFor=\"minFont\"> Font Range: <span className=\"range-slider__value\">{`${fontRange[0]}px - ${fontRange[1]}px`}</span></label> \n                            <Range \n                                allowCross={false} \n                                defaultValue={[10, 24]} \n                                min={7} \n                                max={40} \n                                value={this.state.fontRange} \n                                onChange={(value)=>this.setState({fontRange: value})} \n                                trackStyle={[{backgroundColor: '#2c3e50', height: 10 }, {backgroundColor: '#2c3e50', height: 10 }]}\n                                handleStyle={[{\n                                    height: 23,\n                                    width: 23,\n                                    borderColor: '#1abc9c'\n                                  },\n                                  {\n                                    height: 23,\n                                    width: 23,\n                                    borderColor: '#1abc9c'\n                                  }]}/>\n                        </div>\n                        <div className=\"col-12 col-sm-12 col-md-4 col-lg-4 p-2\">\n                            <label className=\"control-label\"> Add more topics. </label>\n                            <Select\n                                theme={theme => ({\n                                    ...theme,\n                                    borderRadius: 0,\n                                    colors: {\n                                        ...theme.colors,\n                                        primary25: 'hotpink',\n                                        primary: 'black',\n                                    },\n                                })}\n                                isDisabled={this.state.selectedOption===null}\n                                components={this.animatedComponents}\n                                isMulti\n                                options={this.state.topicOptions}\n                                value={this.state.selectedTopicOptions}\n                                onChange={(options)=>{\n                                    let selectedTopics = options ? options.map(item=>item.value) : []\n                                    this.setState(\n                                        {\n                                            selectedTopics: selectedTopics,\n                                            selectedTopicOptions: options\n                                        \n                                        })\n                                }}\n                            />\n                        </div>\n                        <div className=\"col-1 p-2\">\n                            <label className=\"control-label\"> &nbsp; </label>\n                            <button className=\"btn btn-outline-dark submitBtn\" onClick={this.handleControlPanelSubmit} disabled={this.state.selectedTopics.length===0}> Submit </button>\n                        </div>\n                    </div> \n                    <br/>\n                </form>\n        )\n    }\n}","import React from 'react';\nimport olympicSportForceData from '../data/force_graph/force_directed_Sport.json';\nimport olympicSportNodeGroupMap from '../data/force_graph/node_to_group.json';\nimport olympicGroupIdToCategoryMap from '../data/force_graph/group_to_topicSport.json';\nimport youtubeForceData from '../data/force_graph/force_directed_youtube.json';\nimport youtubeNodeGroupMap from '../data/force_graph/bode_to_group_youtube.json';\nimport youtubeGroupIdToCategoryMap from '../data/force_graph/topic_to_group_youtube.json';\nimport olympicCountryForceData from '../data/force_graph/force_directed_NOC.json';\nimport olympicCountryNodeGroupMap from '../data/force_graph/node_to_group_NOC.json';\nimport olympicCountryGroupIdToCategoryMap from '../data/force_graph/topic_to_group_NOC.json'; \nimport * as $ from 'jquery';\nimport * as d3 from 'd3';\nimport './Force.css';\n\nexport default class ForceDirectedGraph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.legendSvg = null;\n        let longColors = [...d3.schemeDark2, ...d3.schemeSet3];\n        this.colorScheme = d3.scaleOrdinal(longColors);\n        this.state = {\n            currentForceData: null\n        }\n    }\n\n    componentDidMount() {\n        let forceData = null;\n        let activeFields = null;\n        let groupNodeMap = null;\n        switch(this.props.activeGraph) {\n            case 'olympic_sport':\n                activeFields = this.props.fields.map(field=>parseInt(olympicGroupIdToCategoryMap[field]));\n                groupNodeMap = olympicGroupIdToCategoryMap;\n                forceData = this.processForceData(olympicSportForceData[this.props.selectedYear], olympicSportNodeGroupMap, activeFields);\n                break;\n            case 'youtube':\n                activeFields = this.props.fields.map(field=>parseInt(youtubeGroupIdToCategoryMap[field]));\n                groupNodeMap = youtubeGroupIdToCategoryMap;\n                forceData = this.processForceData(youtubeForceData[this.props.selectedYear], youtubeNodeGroupMap, activeFields);\n                break;\n            case 'olympic':\n                activeFields = this.props.fields.map(field=>parseInt(olympicCountryGroupIdToCategoryMap[field]));\n                groupNodeMap = olympicCountryGroupIdToCategoryMap;\n                forceData = this.processForceData(olympicCountryForceData[this.props.selectedYear], olympicCountryNodeGroupMap, activeFields);\n        }\n        this.drawForceGraph(forceData);\n        d3.select('#forceLegendSvg').selectAll('*').remove();\n        this.legendSvg = d3.select('#forceSvg').append('g').attr('id', 'forceLegendSvg');\n        this.drawLegends(activeFields, groupNodeMap);\n    }\n\n    drawLegends(activeFields, groupNodeMap) {\n        let inverseMap = {};\n        Object.entries(groupNodeMap).forEach(([key, value])=>{\n            inverseMap[value] = key;\n        });\n        let self = this;\n        this.legendSvg.attr('transform', 'translate(' + 20 + ',' + (30) + ')');\n        var legendNodes = this.legendSvg.selectAll('g').data(activeFields).enter().append('g')\n            .attr('transform', function (d, i) {\n                return 'translate(' + 10 + ',' + ( (i * 10)) + ')';\n        });\n        legendNodes.append('circle')\n        .attr('r', 5)\n        .attr('cy', (d, i)=>(i)*2)\n        .attr('fill', function (d, i) {\n            return self.colorScheme(d);\n        })\n        .attr('fill-opacity', 1)\n        .attr('stroke', 'black')\n        .attr('stroke-width', 0.5);\n\n\n        legendNodes.append('text').text(function (d) {\n            return inverseMap[d];\n        })\n        .attr('y', (d, i)=>(i+1)*2)\n        .attr('font-size', 10)\n        .attr('alignment-baseling', 'middle')\n        .attr('dx', 8);\n    }\n\n    getRandomSubarray(arr, size) {\n        var shuffled = arr.slice(0), i = arr.length, temp, index;\n        while (i--) {\n            index = Math.floor((i + 1) * Math.random());\n            temp = shuffled[index];\n            shuffled[index] = shuffled[i];\n            shuffled[i] = temp;\n        }\n        return shuffled.slice(0, size);\n    }\n\n    keepRelevantGroups(data, nameMap, keepGroups) {\n        let sampleData = $.extend(true, [], data);\n        let links = sampleData.links;\n        let i = links.length;\n        while(i--) {\n            let sourceGrp = parseInt(nameMap[links[i].source]);\n            let targetGrp = parseInt(nameMap[links[i].target]);\n            if(!keepGroups.includes(sourceGrp) || !keepGroups.includes(targetGrp)) {\n                links.splice(i,1);\n            }\n        }\n        return sampleData;\n    }\n    \n    processForceData(data, nodeGroupMap, activeFields) {\n        let linkScale = d3.scaleLinear();\n        switch(this.props.activeGraph) {\n            case 'youtube':\n                linkScale.domain([0, 10]).range([0, 200]);\n                break;\n            case 'olympic_sport':\n                linkScale.domain([0, 13]).range([0, 150]);\n                break;\n            case 'olympic':\n                linkScale.domain([0, 10]).range([0, 100]);\n                break;\n        }\n        data = this.keepRelevantGroups(data, nodeGroupMap, activeFields);\n        let randomLinkSubset = this.getRandomSubarray(data.links, linkScale(activeFields.length));\n        let uniqueNodes = [];\n        let forceData = {\n            links: randomLinkSubset,\n            nodes: []\n        }\n        randomLinkSubset.forEach(link=>{\n            if(!uniqueNodes.includes(link['source'])) {\n                uniqueNodes.push(link['source']);\n            }\n            if(!uniqueNodes.includes(link['target'])) {\n                uniqueNodes.push(link['target']);\n            }\n        });\n        uniqueNodes.forEach(node=>{\n            forceData.nodes.push({\n                id: node,\n                group: nodeGroupMap[node]\n            });\n        }); \n        return forceData;\n    }\n\n    drawForceGraph(graph) {\n        d3.select('#forceSvg').selectAll('*').remove();\n        var radius = 15; \n        // var width = 960,\n            // height = 500;\n        var svg = d3.select(\"#forceSvg\"),\n            width = +svg.attr(\"width\"),\n            height = +svg.attr(\"height\");\n            console.log(width, height);\n\n            var color = this.colorScheme;\n\n            var simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n            var link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\"line\")\n            .data(graph.links)\n            .enter().append(\"line\")\n            .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n            var node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\"g\")\n            .data(graph.nodes)\n            .enter().append(\"g\")\n\n            var circles = node.append(\"circle\")\n            .attr(\"r\", 5)\n            .attr(\"fill\", function(d) { return color(d.group); })\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));\n\n            var lables = node.append(\"text\")\n            .text(function(d) {\n                return d.id;\n            })\n            .attr('class', 'forceText')\n            .attr('x', 6)\n            .attr('y', 3);\n\n            node.append(\"title\")\n            .text(function(d) { return d.id; });\n\n            simulation\n            .nodes(graph.nodes)\n            .on(\"tick\", ticked);\n\n            simulation.force(\"link\")\n            .links(graph.links);\n\n            function ticked() {\n            node\n                .attr(\"transform\", function(d) {\n                    let xPos = Math.max(radius, Math.min(width - radius, d.x));\n                    let yPos = Math.max(radius, Math.min(height - radius, d.y));\n                    return \"translate(\" + xPos + \",\" + yPos + \")\";\n                })\n                // .attr(\"cx\", function(d) { return d.x = Math.max(radius, Math.min(width - radius, d.x)); })\n                // .attr(\"cy\", function(d) { return d.y = Math.max(radius, Math.min(height - radius, d.y)); });\n\n            link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n            // node\n            //     .attr(\"transform\", function(d) {\n            //     return \"translate(\" + d.x + \",\" + d.y + \")\";\n            //     })\n            }\n\n            function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n            }\n\n            function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n            }\n\n            function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n            }\n    }\n\n    render() {\n        return(\n            <svg id=\"forceSvg\" \n                width=\"1200\"\n                height=\"600\"\n                >\n            </svg> \n        )\n    }\n}","import React from 'react';\nimport ForceDirectedGraph from '../ForceGraph/ForceGraph.jsx';\nimport Modal from 'react-modal';\nimport './ForceModal.css';\n\nexport default class ForceModal extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        const {\n            title, isOpen, setModalOpen, activeGraph, selectedYear, fields\n          } = this.props;\n        return (\n            <Modal\n                id=\"test\"\n                contentLabel=\"modalA\"\n                closeTimeoutMS={150}\n                isOpen={isOpen}\n                ariaHideApp={false}\n                // style={customStyles}\n                onRequestClose={()=>setModalOpen(false)}>\n                <h1 className=\"modalHeader\" textAlign=\"center\">\n                    {activeGraph==='youtube'?`Connections between Youtube channels for ${selectedYear}`:`Connections between Olympic athletes for ${selectedYear}`}\n                    <span onClick={()=>setModalOpen(false)} className=\"closeBtn\"> &#10006; </span>\n                </h1>\n                <ForceDirectedGraph activeGraph={activeGraph} selectedYear={selectedYear} fields={fields}/>\n            </Modal>\n        )\n    }\n}","import React from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport ForceModal from '../ForceModal/ForceModal.jsx';\n\nexport default class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.layersSvg = null;\n        this.wordstreamSvg = null;\n        this.axisSvg = null;\n        this.gridLinesSvg = null;\n        this.legendSvg = null;\n        let longColors = [...d3.schemeDark2, ...d3.schemeSet3];\n        this.colorScheme = d3.scaleOrdinal(longColors);\n        this.streamSizeScale = null;\n        this.boxWidth = null;\n        this.stackedLayers = null;\n        this.boxes = null;\n        this.fields = null;\n        this.dates = null;\n        this.wordsData = null;\n        this.drawWordStream = this.drawWordStream.bind(this);\n        this.drawLayers = this.drawLayers.bind(this);\n        this.drawBoxes = this.drawBoxes.bind(this);\n        this.addInteractions = this.addInteractions.bind(this);\n        this.streamHeightScale = d3.scaleLinear().domain([400, 800]);\n        this.setModalOpen = this.setModalOpen.bind(this);\n        this.area = d3.area()\n                    .curve(d3.curveCardinal)\n                    .x((d, i)=>{return ((i)*this.boxWidth);})\n                    .y0((d, i)=>{return this.streamSizeScale(d[0]);})\n                    .y1((d, i)=>{return this.streamSizeScale(d[1]);});\n        this.state = {\n            selectedYear: null,\n            modalOpen: false\n        }\n    }\n\n    setModalOpen(bool) {\n        this.setState({\n            modalOpen: bool\n        })\n    }\n\n    \n    componentDidMount() {\n        this.layersSvg = d3.select(\"#parentSvg\").append('g').attr('id', 'layersSvg');\n        this.gridLinesSvg = d3.select(\"#parentSvg\").append('g').attr('id', 'gridLinesSvg');\n        this.wordstreamSvg = d3.select(\"#parentSvg\").append('g').attr('id', 'wordstreamSvg');\n        this.wordstreamSvg.attr('transform', 'translate(0, 50)');\n        this.axisSvg =  d3.select(\"#parentSvg\").append('g').attr('id', 'axisSvg');\n        this.legendSvg = d3.select('#parentSvg').append('g').attr('id', 'legendSvg');\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.layersData!==prevProps.layersData) {\n            this.streamSizeScale = this.props.layersData.streamSizeScale;\n            this.boxWidth = this.props.layersData.boxWidth;\n            this.stackedLayers = this.props.layersData.stackedLayers;\n            this.boxes = this.props.layersData.boxes;\n            this.fields = this.props.layersData.fields;\n            this.dates = this.props.layersData.dates;\n            // this.drawBoxes();\n        }\n        if(this.props.wordsData!==prevProps.wordsData) {\n            this.wordsData = this.props.wordsData;\n            let topics = {};\n            this.wordsData.forEach(word=>{\n                topics[word.topic] = null;\n            });\n            d3.select('#wordstreamSvg').selectAll('*').remove();\n            d3.select('#legendSvg').selectAll('*').remove();\n            d3.select('#axisSvg').selectAll('*').remove();\n            this.drawLayers();\n            this.drawWordStream();\n            this.drawLegends();\n            this.drawAxis();\n            this.props.setLoading(false);\n            let streamRange = this.props.activeGraph === 'youtube' ? [60, 120] : [60, 120];\n            this.streamHeightScale.range(streamRange);\n        }\n    }\n\n    drawAxis() {\n        let self = this;\n        let xAxisScale = d3.scaleBand().domain(this.dates).range([0, 1190]);\n        let gridScale = d3.scaleLinear().domain([0, this.dates.length]).range([0, 1195]);\n        var xAxis = d3.axisBottom(xAxisScale);\n        let legendHeight = d3.select('#legendSvg').node().getBBox().height\n        this.axisSvg.attr('transform', `translate(0, ${700})`).attr('class', 'x-axis');\n        let axisNodes = this.axisSvg.call(xAxis);\n\n        axisNodes.selectAll('.tick text')\n        .attr('font-size', 11)\n        .style('font-weight', 'bold');\n\n        function make_x_gridlines() {\t\t\n            return d3.axisBottom(gridScale).ticks(self.dates.length+1);\n        }\n        this.gridLinesSvg.attr('transform', `translate(${0},${800})`)\n          .call(make_x_gridlines()\n          .tickSize(-1200)\n          .tickFormat(\"\")\n        );\n\n        d3.select('#axisSvg')\n        .selectAll('.tick')\n        .on('mouseover', function() {\n            let text = d3.select(this);\n            text.style('cursor', 'pointer');\n            text.style('filter', 'brightness(80%)')\n        })\n        .on('click',(year) => {\n            this.setState({\n                selectedYear: year\n            }, ()=>{\n                this.setModalOpen(true);\n            });\n        });\n    }\n\n    drawLegends() {\n        let self = this;\n        this.legendSvg.attr('transform', 'translate(' + 20 + ',' + (200) + ')');\n        var legendNodes = this.legendSvg.selectAll('g').data(this.fields).enter().append('g')\n            .attr('transform', function (d, i) {\n                return 'translate(' + 10 + ',' + ( (i * 10)) + ')';\n        });\n        legendNodes.append('circle')\n        .attr('r', 5)\n        .attr('cy', (d, i)=>(i)*2)\n        .attr('fill', function (d, i) {\n            return self.colorScheme(i);\n        })\n        .attr('fill-opacity', 1)\n        .attr('stroke', 'black')\n        .attr('stroke-width', 0.5);\n\n\n        legendNodes.append('text').text(function (d) {\n            return d;\n        })\n        .attr('y', (d, i)=>(i+1)*2)\n        .attr('font-size', 10)\n        .attr('alignment-baseling', 'middle')\n        .attr('dx', 8);\n    }\n\n    drawWordStream() {\n        // var self = this;\n        // var prevColor;\n        var texts = this.wordstreamSvg.selectAll('.word').data(this.wordsData, d => d.id);\n\n        texts.exit().remove();\n\n        var textEnter = texts.enter().append('g')\n            .attr('transform', function (d, i) {\n                return 'translate(' + (d.x) + ', ' + d.y + ')rotate(' + d.rotate + ')';\n            })\n            .attr(\"class\", \"word\")\n            .append('text')\n            .attr('class', 'textData');\n\n        textEnter\n            .transition().duration(400)\n            .text(function (d) {\n                return d.text;\n            })\n            .attr('id', d=>d.id)\n            // .attr('class', 'textData')\n            .attr('font-family', 'Arial')\n            .attr('font-size', d=>d.fontSize)\n            .attr('fill', (d)=>{return this.colorScheme(this.fields.indexOf(d.topic))})\n            .attr('fill-opacity', 1)\n            .attr('text-anchor', 'middle')\n            .attr('topic', d=>d.topic)\n            .attr('visibility', d=>d.placed?'visible':'hidden');\n\n        texts\n            .transition().duration(400)\n            .attr('transform', function (d) {\n                return 'translate(' + d.x + ', ' + d.y + ')rotate(' + d.rotate + ')';\n            })\n            .select(\"text\")\n            .attr('topic', d=>d.topic)\n            .attr('fill', (d)=>{return this.colorScheme(this.fields.indexOf(d.topic))})\n            .attr('font-size', function (d) {\n                return d.fontSize;\n            })\n            .attr('visibility', function (d) {\n                return d.placed ? \"visible\" : \"hidden\";\n            });\n            this.addInteractions();\n    }\n\n    addInteractions() {\n        var wordStreamG = this.wordstreamSvg.append('g').attr(\"id\", \"wordStreamG\");\n        let prevColor;\n        let self = this;\n        this.wordstreamSvg.selectAll('.textData').on('mouseenter', function () {\n            var thisText = d3.select(this);\n            thisText.style('cursor', 'pointer');\n            prevColor = thisText.attr('fill');\n            var text = thisText.text();\n            var topic = thisText.attr('topic');\n            var allTexts = self.wordstreamSvg.selectAll('.textData').filter(t => {\n                return t && t.text === text && t.topic === topic;\n            });\n            allTexts.attr('stroke', prevColor).attr('stroke-width', 1);\n        });\n        this.wordstreamSvg.selectAll('.textData').on('mouseout', function () {\n            var thisText = d3.select(this);\n            thisText.style('cursor', 'default');\n            var text = thisText.text();\n            var topic = thisText.attr('topic');\n            var allTexts = self.wordstreamSvg.selectAll('.textData').filter(t => {\n                return t && !t.cloned && t.text === text && t.topic === topic;\n            });\n            allTexts.attr('stroke', 'none').attr('stroke-width', 0);\n        });\n        this.wordstreamSvg.selectAll('.textData').on('click', function () {\n                // console.log('clicked');\n                self.props.setShowSideGraph(true);\n                var thisText = d3.select(this);\n                var text = thisText.text();\n                var topic = thisText.attr('topic');\n                var allTexts = self.wordstreamSvg.selectAll('.textData').filter(t => {\n                    return t && t.text === text && t.topic === topic;\n                });\n                let stackData = allTexts._groups[0].map(item=>{\n                    return item.__data__; \n                });\n                self.props.setStackBarData(stackData);\n                //Select the data for the stream layers\n                var streamLayer = d3.select(\"path[topic='\" + topic + \"']\")._groups[0][0].__data__;\n                var points = [];\n                streamLayer.forEach((elm, i) => {\n                    points.push([elm[1], (elm[1]+1), i*self.boxWidth]);\n                });\n                // points.unshift(points[0]);\n                for(const i in allTexts._groups[0]){\n                    let t = allTexts._groups[0][i];\n                    var data = t.__data__;\n                    var fontSize = data.fontSize;\n                    var thePoint = points[data.timeStep + 1];\n                    thePoint[1] = (thePoint[0]-self.streamHeightScale(data.streamHeight));\n                    var clonedNode = t.cloneNode(true);\n                    d3.select(clonedNode)\n                    .attr('visibility', 'visible')\n                    .attr('stroke', 'none')\n                    .attr('stroke-size', 0);\n\n                    var clonedParentNode = t.parentNode.cloneNode(false);\n                    clonedParentNode.appendChild(clonedNode);\n    \n                    t.parentNode.parentNode.appendChild(clonedParentNode);\n                    d3.select(clonedParentNode)\n                    .attr('cloned', true)\n                    .attr('topic', topic)\n                    .transition()\n                    .duration(300)\n                    .attr('transform', function (d, i) {\n                        if(thePoint[2]>=1200) thePoint[2] = 1170;\n                        return 'translate(' + (thePoint[2]) + ',' + (self.streamSizeScale(thePoint[1])-5) + ')';\n                    });\n                    wordStreamG.append('path')\n                    .datum(points)\n                    .attr('d', self.area)\n                    .style('fill', prevColor)\n                    .attr('fill-opacity', prevColor)\n                    .attr('stroke', prevColor)\n                    .attr('stroke-width', 0.3)\n                    .attr('topic', topic)\n                    .attr('wordStream', true);\n                    var allOtherTexts = self.wordstreamSvg.selectAll('.textData').filter(t => {\n                        return t && !t.cloned;\n                        // return t && !t.cloned && t.topic === topic;\n                    });\n                    allOtherTexts.attr('visibility', 'hidden');\n                }\n            });\n            self.fields.forEach(topic => {\n                d3.select(\"path[topic='\" + topic + \"']\").on('click', function () {\n                    self.props.setShowSideGraph(false);\n                    self.wordstreamSvg.selectAll('.textData').filter(t => {\n                        return t && !t.cloned && t.placed;\n                    })\n                    .attr('visibility', 'visible');\n          \n                    document.querySelectorAll(\"g[cloned='true']\").forEach(node => {\n                        node.parentNode.removeChild(node);\n                    });\n\n                    document.querySelectorAll(\"path[wordStream='true']\").forEach(node => {\n                        node.parentNode.removeChild(node);\n                    });\n                });\n    \n            });\n    }\n\n    drawLayers() {\n        let pathSelection = this.layersSvg.selectAll('.curve').data(this.stackedLayers);\n        pathSelection.exit().remove();\n\n        pathSelection\n            .transition().duration(400)\n            .attr('d', this.area)\n            .attr('class', 'curve')\n            .attr('fill-opacity', 0)\n            .attr('stroke-width', 0)\n            .attr('stroke', 'black')\n            .attr('topic', (d,i)=>this.fields[i])\n            .style('fill', (d,i)=>this.colorScheme(i));\n\n        pathSelection\n            .enter()\n            .append('path')\n            .attr('class', 'curve')\n            .attr('d', this.area)\n            .attr('fill-opacity', 0)\n            .attr('stroke-width', 0)\n            .attr('stroke', 'black')\n            .attr('topic', (d,i)=>this.fields[i])\n            .style('fill', (d,i)=>this.colorScheme(i));\n    }\n\n    drawBoxes() {\n            this.fields.forEach(topic=>{\n                let fieldGroup = this.wordstreamSvg.append('g');\n                fieldGroup.selectAll('g').data(this.boxes[topic]).enter()\n                .append('g')\n                .append('rect')\n                .attr('transform', (d, i)=>'translate('+((i)*this.boxWidth)+', '+((d.y))+')')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', this.boxWidth)\n                .attr('height',  (d, i)=> (d.height))\n                .attr('fill', 'none')\n                .attr('stroke', 'black')\n                .attr('stroke-size', 10)\n                .attr('opacity', 1)\n            });\n    }\n\n    render() {\n        return(\n            <div id=\"graphDiv\">\n                <svg \n                    preserveAspectRatio=\"xMidYMin slice\"\n                    viewBox={`0 180 ${1200} ${650}`} \n                    id=\"parentSvg\" \n                    transform=\"translate(0, 0)\"> \n                </svg>\n                <ForceModal fields={this.fields} isOpen={this.state.modalOpen} selectedYear={this.state.selectedYear} setModalOpen={this.setModalOpen} activeGraph={this.props.activeGraph}/>\n            </div> \n        )\n    }\n}","import React from 'react';\nimport * as d3 from 'd3';\n\nexport default class StackBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameOfPerson: null\n        }\n    }\n    \n\n    componentDidUpdate(prevProps) {\n        if(this.props.stackBarData!==prevProps.stackBarData) {\n            let columns = null;\n            let keepKeys = null;\n            let stackData = null;\n            this.setState({\n                nameOfPerson: this.props.stackBarData[0].text\n            })\n            switch(this.props.activeGraph) {\n                case 'olympic_sport':\n                case 'olympic':\n                    columns = ['Gold', 'Bronze', 'Silver', 'NA'];\n                    keepKeys = ['Gold', 'Bronze', 'Silver', 'NA', 'year'];\n                    stackData = [];\n                    this.props.stackBarData.forEach(item=>{\n                        let obj = {};\n                        Object.entries(item).forEach(([key, value])=>{\n                            if(keepKeys.includes(key)){\n                                obj[key] = value;\n                            }\n                        });\n                        stackData.push(obj);\n                    });\n                    break;\n                case 'youtube':\n                    columns = ['likes', 'dislikes'];\n                    keepKeys = ['likes', 'dislikes', 'year'];\n                    stackData = [];\n                    console.log(this.props.stackBarData);\n                    this.props.stackBarData.forEach(item=>{\n                        let obj = {};\n                        Object.entries(item).forEach(([key, value])=>{\n                            if(keepKeys.includes(key)){\n                                obj[key] = value;\n                            }\n                        });\n                        stackData.push(obj);\n                    });\n                    break;\n                    // d3.select('#stackBar').selectAll('*').remove();\n                    // this.draw(stackData, columns);\n            }\n            console.log(stackData, columns);\n            d3.select('#stackBar').selectAll('*').remove();\n            this.draw(stackData, columns);\n        }\n    }\n\n    draw(data, columns) {\n        let self = this;\n        var svg = d3.select(\"#stackBar\"),\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = +svg.attr(\"width\") - margin.left - margin.right,\n        height = +svg.attr(\"height\") - margin.top - margin.bottom,\n        g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // set x scale\n        var x = d3.scaleBand()\n        .rangeRound([0, width])\n        .paddingInner(0.05)\n        .align(0.1);\n\n        // set y scale\n        var y = d3.scaleLinear()\n        .rangeRound([height, 0]);\n\n        // set the colors\n        let colors = this.props.activeGraph === 'youtube'? d3.schemePaired : [\"#d4af37\", \"#cd7f32\", \"#aaa9ad\", \"#6b486b\"];\n        var z = d3.scaleOrdinal()\n        .range(colors);\n        data.forEach(item=>{\n        let total = 0;\n        columns.forEach(key=>{\n        total += parseInt(item[key]);\n        });\n        item['total'] = total;\n        });\n        var keys = columns;\n        let maxTotal = d3.max(data, function(d) { return d.total; });\n        data.sort(function(a, b) { return b.total - a.total; });\n        let xRangeScale = d3.scaleLinear().domain([0, 8]).range([100, 340]);\n        let xRange = xRangeScale(data.length);\n        x.domain(data.map(function(d) { return d.year; })).range([0, xRange]);\n        y.domain([0, d3.max(data, function(d) { return d.total; })]).range([height, 0]).nice();\n        z.domain(keys);\n\n        g.append(\"g\")\n        .selectAll(\"g\")\n        .data(d3.stack().keys(keys)(data))\n\n        .enter().append(\"g\")\n        .attr(\"fill\", function(d) { return z(d.key); })\n        .selectAll(\"rect\")\n        .data(function(d) { return d; })\n        .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.data.year); })\n        .attr(\"y\", function(d) { return y(d[1]); })\n        .attr(\"height\", function(d) { return (y(d[0]) - y(d[1])); })\n        .attr(\"width\", x.bandwidth())\n        .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n        .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n        .on(\"mousemove\", function(d) {\n        var xPosition = d3.mouse(this)[0] - 5;\n        var yPosition = d3.mouse(this)[1] - 5;\n        tooltip.attr(\"transform\", \"translate(\" + xPosition + \",\" + yPosition + \")\");\n        tooltip.select(\"text\").text(d[1]-d[0]);\n        });\n        \n        maxTotal = self.props.activeGraph==='youtube'?10:maxTotal;\n\n        g.append(\"g\")\n        .attr(\"class\", \"stackAxis\")\n        .attr('id', 'stackXAxis')\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n        g.append(\"g\")\n        .attr(\"class\", \"stackAxis\")\n        .call(d3.axisLeft(y).ticks(maxTotal).tickFormat(d3.format(\"d\")))\n        .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"fill\", \"#000\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"start\");\n\n        var legend = g.append(\"g\")\n        .attr(\"id\", \"stackLegend\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"g\")\n        .data(keys.slice().reverse())\n        .enter().append(\"g\")\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n        legend.append(\"rect\")\n        .attr(\"x\", width)\n        .attr(\"width\", 19)\n        .attr(\"height\", 19)\n        .attr(\"fill\", z);\n\n        legend.append(\"text\")\n        .attr(\"x\", width - 5)\n        .attr(\"y\", 9.5)\n        .attr(\"dy\", \"0.32em\")\n        .text(function(d) { return d; });\n\n        var tooltip = svg.append(\"g\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"display\", \"none\");\n        \n        tooltip.append(\"rect\")\n        .attr(\"width\", 60)\n        .attr(\"height\", 20)\n        .attr(\"fill\", \"white\")\n        .style(\"opacity\", 0.5);\n\n        tooltip.append(\"text\")\n        .attr(\"x\", 30)\n        .attr(\"dy\", \"1.2em\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"font-weight\", \"bold\");\n    }\n\n    render(){\n        return(\n            <div>\n                <h3> \n                    {this.state.nameOfPerson}\n                </h3> \n                <h6> \n                    {this.props.activeGraph === 'youtube' ? 'Likes and dislikes over months ' : 'Medals won over the years'} \n                </h6>\n                <svg viewBox=\"0 0 400 500\" height=\"500\" width=\"400\" id=\"stackBar\"></svg>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ControlPanel from './control-panel/ControlPanel.jsx';\nimport Graph from './graph/Graph.jsx';\nimport StackBar from './stack-bar/StackBar.jsx';\nimport './WordStream.css';\nimport './loader/Loader.css';\n\nexport default class WordStream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layersData: null,\n            wordsData: null,\n            activeGraph: null,\n            stackBarData: null,\n            showSideGraph: false,\n            isLoading: false\n        };\n        this.setLayersData = this.setLayersData.bind(this);\n        this.setWordsData = this.setWordsData.bind(this);\n        this.setActiveGraph = this.setActiveGraph.bind(this);\n        this.setStackBarData = this.setStackBarData.bind(this);\n        this.setShowSideGraph = this.setShowSideGraph.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n        this.screenDimensions = [1200, 800];\n    }\n\n    setShowSideGraph(bool) {\n        this.setState({\n            showSideGraph: bool\n        })\n    }\n\n    async setLoading(bool){\n        return new Promise(resolve=>{\n            return this.setState({\n                isLoading: bool\n            }, resolve())\n        });\n    }\n\n    setStackBarData(stackBarData) {\n        this.setState({\n            stackBarData: stackBarData\n        })\n    }\n\n    setLayersData(layersData) {\n        this.setState({\n            layersData: layersData\n        });\n    }\n\n    setWordsData(wordsData) {\n        this.setState({\n            wordsData: wordsData\n        })\n    }\n\n    setActiveGraph(activeGraph) {\n        this.setState({\n            activeGraph: activeGraph\n        })\n    }\n\n    render() {\n        return(\n            <div className={this.state.isLoading? 'loadingDiv': 'mainDiv'}>\n                <div className={this.state.isLoading? 'loading': 'hideLoading'}> </div>\n                <h3 className=\"text-center\"> WordStream: Interactive Topic Visualization </h3>\n                <div className=\"row\">\n                    <div className=\"col-12 controlPanelDiv\"> \n                        <ControlPanel\n                            setLayersData={this.setLayersData}\n                            setWordsData={this.setWordsData}\n                            screenDimensions={this.screenDimensions}\n                            setActiveGraph={this.setActiveGraph}\n                            setLoading={this.setLoading}\n                        />\n                    </div>\n                    <div className={this.state.showSideGraph ? \n                        'col-12 col-sm-12 col-md-8 col-lg-8 graphDiv' : 'col-12 graphDiv'}> \n                        <Graph \n                            layersData={this.state.layersData}\n                            wordsData={this.state.wordsData}\n                            screenDimensions={this.screenDimensions}\n                            activeGraph={this.state.activeGraph}\n                            setStackBarData={this.setStackBarData}\n                            setShowSideGraph={this.setShowSideGraph}\n                            setLoading={this.setLoading}/>\n                    </div>\n                    <div className={this.state.showSideGraph? 'col-12 col-sm-12 col-md-4 col-lg-4 stackBar' : 'hideStackBar'}> \n                        <StackBar \n                            activeGraph={this.state.activeGraph}\n                            stackBarData={this.state.stackBarData}/>\n                    </div>\n                </div> \n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport WordStream from './components/wordstream/WordStream.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\" id=\"app\">\n        <WordStream/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nwindow.$ = window.jQuery = require('jquery');\nwindow.d3 = window.d3 = require('d3');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}